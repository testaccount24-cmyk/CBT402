Note :   Here is a copy of this total package in one
    member.  I have broken the executable parts of this member up,
    into members SMFREX01 and SMFJCL01.  The other two members:
    SMFP0001 and SMFJ0001 were part of another transmission.

           Sam Golob     email:  sbgolob@attglobal.net

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


 This program allows the Operations Staff to monitor
 SMF Status regulary across many MVS Images.

 A REXX program displays SMF status.  This REXX program
 is excuted on every LPAR thru a JOB every hour.  The
 JOB then xmits the SMF Status details to a single LPAR
 on which all the details are consolidated.

 This REXX will be help to people who don't have
 automation tools to trap the 'D SMF' reponse.


THE REXX PROGRAM SMFREX01 READS SMCA BLOCK AND PRINTS THE SMF
STATUS.  THS UTILITY WILL BE HELPFUL FOR THE OPERATORS WHO HAVE
TO MONITOR THE SMF STATUS OF MANY SYSTEMS IN A DATA CENTER.

THIS UTILITY DOES NOT REQUIRE ANY AUTOMATION TOOL TO ISSUE 'D SMF'
AND TRAP THE RESPONSE.  THE PROGRAM IS EXCUTED THRU A JCL SMFJCL01.
THIS JCL CAN BE SUITABLY MODIFIED TO EXCUTE ON VARIOUS SYSTEMS AND
BRING IN THE DATA ON A SINGLE SYSTEMS TO KNWO THE SMF STATUS.

SMFREX01:

/* REXX */
CVT      = C2D(STORAGE(10,4))
SMCA     = STORAGE(D2X(CVT + 196),4)
SMCA     = C2D(BITAND(SMCA,'7FFFFFFF'X))

SMFID    = STRIP(STORAGE(D2X(SMCA + 16),4),T)
SMCAFRDS = C2D(STORAGE(D2X(SMCA+244),4))
SMCALRDS = C2D(STORAGE(D2X(SMCA+248),4))

SAY 'CURRENT SMF STATUS ON ' SMFID 'AS ON : ' DATE('U') TIME()
SAY COPIES('-',79)
HEADING = LEFT('DATASET',45)||LEFT('VOLUME',7)||LEFT('SIZE',8)||,
          LEFT('%FULL',5)||LEFT(' STATUS',8)
SAY HEADING
SAY COPIES('-',79)

RDSNEXT  = SMCAFRDS
DO WHILE (SMCALRDS <> RDSNEXT)
     RDSNAME  = STORAGE(D2X(RDSNEXT+16),44)
     RDSVOL   = STORAGE(D2X(RDSNEXT+60),6)
     RDSCAP   =  C2D(STORAGE(D2X(RDSNEXT+76),4))
     RDSCAPA  =  FORMAT(C2D(STORAGE(D2X(RDSNEXT+80),4)),7,0)
     PERCENT  =  FORMAT((RDSCAPA*100/RDSCAP),3,0)
     RDSFLAG1 = C2X(STORAGE(D2X(RDSNEXT+12),1))
     SELECT
        WHEN RDSFLAG1 = '00' THEN
             STATUS   = 'ACTIVE'
        WHEN RDSFLAG1 = '04' THEN
             STATUS   = 'ALTERNATE'
        WHEN RDSFLAG1 = '08' THEN
             STATUS   = 'DUMP REQUIRED'
        OTHERWISE
             STATUS   = 'NOT NORMAL'
     END
     RDSNEXT = C2D(STORAGE(D2X(RDSNEXT+4),4))
     SAY RDSNAME RDSVOL RDSCAP PERCENT STATUS
END
SAY COPIES(' ',79)
EXIT

SMFJCL01:

//* Add Valid Jobcard
//* Add Valid Jobcard
//* Add Valid Jobcard
//************************************************************
//* STEP0001 writes CURRENT SMF Status in a PS File.
//************************************************************
//STEP0001 EXEC PGM=IKJEFT01
//SYSTSPRT DD DISP=OLD,DSN=name-of-a-ps  FB with LRECL=80
//SYSEXEC  DD Disp=shr,DSN=name-of-the-pds-where-SMFP0001-resides
//SYSTSIN  DD *
  %SMFP0001
/*
//************************************************************
//* STEP0002 creates a new job. SMF Status details written
//* instream to this new job. The new job is then /*XMITed to
//* a LPAR where the data is consolidated in a single dataset
//************************************************************
//STEP0002 EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT1   DD DATA,DLM=ZZ
//NEWJOB   JOB
//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute
//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute
//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute
/*XEQ  jes-node-name
//         EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT2   DD DISP=MOD,DSN=ds-on-other-lpar-consolidates-smf-status
//SYSUT1   DD *
ZZ
//         DD DISP=OLD,DSN=name-of-a-ps-coded-in-STEP0001-SYSTSPRT
//SYSUT2   DD SYSOUT=(A,INTRDR)
//

